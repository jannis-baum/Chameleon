#!/usr/bin/env python3

import argparse
import os
from typing import Any

import yaml

from lib.colors import ranked_matches, str2color
from lib.config import config_schema
from lib.data import Highlight, Scheme
from lib.schemes.custom import custom_out
from lib.schemes.kitty import kitty_out
from lib.schemes.text_mate import tm_out
from lib.schemes.vim import vim_out

def save_to(dest: str, content: str):
    path = os.path.expanduser(dest)
    os.makedirs(os.path.dirname(path), exist_ok=True)
    with open(path, 'w') as fp:
        fp.write(content)

def main(config: dict[str, Any]):
    scheme = Scheme()

    vim = vim_out(config['vim'], scheme)
    save_to(config['vim']['destination'], vim)

    if 'text-mate' in config:
        tm = tm_out(config['text-mate'], scheme)
        save_to(config['text-mate']['destination'], tm)

    if 'custom' in config:
        for custom in config['custom']:
            content = custom_out(custom, scheme)
            save_to(custom['destination'], content)

    kitty_dark, kitty_light = kitty_out(config['kitty'], scheme)
    save_to(config['kitty']['destinations']['dark'], kitty_dark)
    save_to(config['kitty']['destinations']['light'], kitty_light)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('file')

    args = parser.parse_args()
    with open(args.file, 'r') as fp:
        config = config_schema(yaml.safe_load(fp))
        main(config)
